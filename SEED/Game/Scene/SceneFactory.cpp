#include "SceneFactory.h"
#include "SceneManager/SceneManager.h"


////////////////////////////////////////////////////////////////////////////////////////
// static変数の実体化
////////////////////////////////////////////////////////////////////////////////////////
std::optional<std::string> SceneFactory::startupSceneName_ = std::nullopt;
std::unordered_map<std::string, std::function<Scene_Base* (void)>> SceneFactory::sceneMap_;

////////////////////////////////////////////////////////////////////////////////////////
// コンストラクタ
////////////////////////////////////////////////////////////////////////////////////////
SceneFactory::SceneFactory() {}

////////////////////////////////////////////////////////////////////////////////////////
// シーンの登録関数
////////////////////////////////////////////////////////////////////////////////////////
void SceneFactory::Register(const std::string& sceneName, std::function<Scene_Base* (void)> createFunc) {
    sceneMap_[sceneName] = createFunc;
}

////////////////////////////////////////////////////////////////////////////////////////
// シーンの生成
////////////////////////////////////////////////////////////////////////////////////////
Scene_Base* SceneFactory::Create(const std::string& sceneName) {
    // シーンが登録されていない場合はエラー
    if (sceneMap_.find(sceneName) == sceneMap_.end()) { assert(false); }
    // シーンの生成
    return sceneMap_[sceneName]();
}