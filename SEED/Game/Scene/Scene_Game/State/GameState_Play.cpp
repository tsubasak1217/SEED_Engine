#include <GameState_Play.h>
#include <Scene_Game.h>
#include "StageManager.h"

// 遷移可能なステートのインクルード
#include "GameState_Pause.h"

////////////////////////////////////////////////////////////////////////////////////////
//
// コンストラクタ：デストラクタ
//
////////////////////////////////////////////////////////////////////////////////////////

GameState_Play::GameState_Play(Scene_Base* pScene, bool isPlayerSetStartPos) : State_Base(pScene){
    pGameScene_ = dynamic_cast<Scene_Game*>(pScene);
    Initialize(isPlayerSetStartPos);
}

GameState_Play::~GameState_Play(){}

////////////////////////////////////////////////////////////////////////////////////////
//
// 初期化処理
//
////////////////////////////////////////////////////////////////////////////////////////
void GameState_Play::Initialize(bool isPlayerSetStartPos){
    // FieldEditor
    fieldEditor_ = std::make_unique<FieldEditor>(pGameScene_->Get_StageManager());
    fieldEditor_->Initialize();

    // FieldColliderEditor
    fieldColliderEditor_ = std::make_unique<ColliderEditor>("field", nullptr);

    // EnemyEditor
    enemyEditor_ = std::make_unique<EnemyEditor>(pGameScene_->Get_pEnemyManager());

    // プレイヤーの初期位置
    if(isPlayerSetStartPos){
        pGameScene_->Get_pPlayer()->SetPosition(StageManager::GetStartPos());
    }
    pGameScene_->Get_pPlayer()->SetIsMovable(true);
    
    // カメラのターゲット
    pGameScene_->Get_pCamera()->SetTarget(pGameScene_->Get_pPlayer());
}

////////////////////////////////////////////////////////////////////////////////////////
//
// 終了処理
//
////////////////////////////////////////////////////////////////////////////////////////
void GameState_Play::Finalize(){}

////////////////////////////////////////////////////////////////////////////////////////
//
// 更新処理
//
////////////////////////////////////////////////////////////////////////////////////////
void GameState_Play::Update(){
#ifdef _DEBUG
    // ステージのエディター
    fieldEditor_->ShowImGui();

    if(fieldEditor_->GetIsEditing()){
        SEED::SetCamera("debug");
    } else{
        SEED::SetCamera("follow");
    }

    // フィールドのコライダーエディター
    fieldColliderEditor_->Edit();

    // 敵のエディター
    enemyEditor_->ShowImGui();

#endif // _DEBUG
}

////////////////////////////////////////////////////////////////////////////////////////
//
// 描画処理
//
////////////////////////////////////////////////////////////////////////////////////////
void GameState_Play::Draw(){}

////////////////////////////////////////////////////////////////////////////////////////
//
// フレーム開始処理
//
////////////////////////////////////////////////////////////////////////////////////////
void GameState_Play::BeginFrame(){}

////////////////////////////////////////////////////////////////////////////////////////
//
// フレーム終了処理
//
////////////////////////////////////////////////////////////////////////////////////////
void GameState_Play::EndFrame(){
    ManageState();
}

////////////////////////////////////////////////////////////////////////////////////////
//
// コライダーをCollisionManagerに渡す
//
////////////////////////////////////////////////////////////////////////////////////////
void GameState_Play::HandOverColliders(){
    fieldColliderEditor_->HandOverColliders();
}

////////////////////////////////////////////////////////////////////////////////////////
//
// ステート管理
//
////////////////////////////////////////////////////////////////////////////////////////
void GameState_Play::ManageState(){

    // ポーズへ遷移
    if(Input::IsTriggerPadButton(PAD_BUTTON::START)){
        pGameScene_->ChangeState(new GameState_Pause(pScene_));
    }
}
