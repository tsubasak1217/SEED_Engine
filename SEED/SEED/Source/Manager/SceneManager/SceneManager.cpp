#include "SceneManager.h"

///////////////////////////////////////////////////////////////////////////////
// static変数
///////////////////////////////////////////////////////////////////////////////
std::unique_ptr<SceneManager> SceneManager::instance_ = nullptr;

///////////////////////////////////////////////////////////////////////////////
// コンストラクタ・デストラクタ
///////////////////////////////////////////////////////////////////////////////
SceneManager::SceneManager(){}
SceneManager::~SceneManager(){}


///////////////////////////////////////////////////////////////////////////////
// 初期化
///////////////////////////////////////////////////////////////////////////////
void SceneManager::Initialize(){
    GetInstance();
}


///////////////////////////////////////////////////////////////////////////////
// インスタンス取得
///////////////////////////////////////////////////////////////////////////////
SceneManager* SceneManager::GetInstance(){

    if(!instance_){
        instance_.reset(new SceneManager());
    }

    return instance_.get();
}

///////////////////////////////////////////////////////////////////////////////
// シーンの登録
///////////////////////////////////////////////////////////////////////////////
void SceneManager::Register(const std::string& sceneName, std::function<Scene_Base* (void)> createFunc) {
    instance_->sceneMap_[sceneName] = createFunc;
}


///////////////////////////////////////////////////////////////////////////////
// シーンの作成
///////////////////////////////////////////////////////////////////////////////
Scene_Base* SceneManager::CreateScene(const std::string sceneName) {
    // 例外チェック
    if (instance_->sceneMap_.find(sceneName) == instance_->sceneMap_.end()) { assert(false); }
    if (instance_->sceneMap_[sceneName] == nullptr) { assert(false); }

    // シーンを返す
    return instance_->sceneMap_[sceneName]();
}
