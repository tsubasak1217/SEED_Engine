#include <Game/Scene/Scene_Clear/Scene_Clear.h>

///etc
#include <SEED/Lib/Functions/MyFunc.h>
#include <Game/Components/ResultUpdateComponent.h>

////////////////////////////////////////////////////////////////////////////////////////////
//
// コンストラクタ・デストラクタ
//
////////////////////////////////////////////////////////////////////////////////////////////
Scene_Clear::Scene_Clear() : Scene_Base(){
}

Scene_Clear::~Scene_Clear(){}


////////////////////////////////////////////////////////////////////////////////////////////
//
// 初期化
//
////////////////////////////////////////////////////////////////////////////////////////////
void Scene_Clear::Initialize(){
    SEED::SetMainCamera("default");

    // リザルト更新用オブジェクトの生成
    resultUpdater_ = std::make_unique<GameObject2D>(this);
    resultUpdater_->AddComponent<ResultUpdate2DComponent>();
}

////////////////////////////////////////////////////////////////////////////////////////////
//
// 更新
//
////////////////////////////////////////////////////////////////////////////////////////////
void Scene_Clear::Update(){

    // 共通更新
    Scene_Base::Update();

    // タイマーの更新
    if(Input::IsTriggerKey(DIK_SPACE)){
        step_++;
        stepTimer_.Reset();
    
    } else if(stepTimer_.IsFinishedNow()){
        step_++;
        stepTimer_.Reset();
    
    }

    // 時間の更新
    stepTimer_.Update();
}

////////////////////////////////////////////////////////////////////////////////////////////
//
// 描画
//
////////////////////////////////////////////////////////////////////////////////////////////
void Scene_Clear::Draw(){
    Scene_Base::Draw();

    //
}

////////////////////////////////////////////////////////////////////////////////////////////
//
// フレーム開始処理
//
////////////////////////////////////////////////////////////////////////////////////////////
void Scene_Clear::BeginFrame(){
    Scene_Base::BeginFrame();
}

////////////////////////////////////////////////////////////////////////////////////////////
//
// フレーム終了処理
//
////////////////////////////////////////////////////////////////////////////////////////////
void Scene_Clear::EndFrame(){

    Scene_Base::EndFrame();

    // ステップのチェック
    CheckStep();

    if(sceneChangeOrder){
        ChangeScene("Game");
        return;
    }
}

/////////////////////////////////////////////////////////////////////////////////////////
// ステップのチェック
/////////////////////////////////////////////////////////////////////////////////////////
void Scene_Clear::CheckStep(){
    if(step_ >= kMaxStep_){
        if(Input::IsTriggerKey(DIK_SPACE)){
            sceneChangeOrder = true;
        }
    }
}
