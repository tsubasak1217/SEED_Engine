#include "Scene_Game.h"
#include <SEED.h>
#include "Environment.h"
#include "ParticleManager.h"
#include "CameraManager/CameraManager.h"


/////////////////////////////////////////////////////////////////////////////////////////
//
//  コンストラクタ・デストラクタ
//
/////////////////////////////////////////////////////////////////////////////////////////

Scene_Game::Scene_Game() {
    Initialize();
};

Scene_Game::~Scene_Game() {
}

/////////////////////////////////////////////////////////////////////////////////////////
//
//  初期化
//
/////////////////////////////////////////////////////////////////////////////////////////

void Scene_Game::Initialize() {

    ////////////////////////////////////////////////////
    // マネージャー初期化
    ////////////////////////////////////////////////////


    ////////////////////////////////////////////////////
    //  カメラ初期化
    ////////////////////////////////////////////////////

    SEED::GetCamera()->SetTranslation({ -191.6f,46.8f,-185.8f });
    SEED::GetCamera()->SetRotation({ 0.15173f,0.7807f,0.0f });
    SEED::GetCamera()->Update();
    SEED::SetCamera("debug");

    ////////////////////////////////////////////////////
    //  ライトの初期化
    ////////////////////////////////////////////////////


    ////////////////////////////////////////////////////
    //  オブジェクトの初期化
    ////////////////////////////////////////////////////


    ////////////////////////////////////////////////////
    // スプライトの初期化
    ////////////////////////////////////////////////////


    ////////////////////////////////////////////////////
    //  他クラスの情報を必要とするクラスの初期化
    ////////////////////////////////////////////////////


    /////////////////////////////////////////////////
    //  関連付けや初期値の設定
    /////////////////////////////////////////////////

}

void Scene_Game::Finalize() {}

/////////////////////////////////////////////////////////////////////////////////////////
//
//  更新処理
//
/////////////////////////////////////////////////////////////////////////////////////////

void Scene_Game::Update() {

    /*========================== ImGui =============================*/

#ifdef _DEBUG
    ImGui::Begin("environment");
    /*===== FPS表示 =====*/
    ImGui::Text("FPS: %f", ImGui::GetIO().Framerate);
    ImGui::End();
#endif

    /*======================= 各状態固有の更新 ========================*/

    if (currentState_) {
        currentState_->Update();
    }

    if (currentEvent_) {
        currentEvent_->Update();
    }

    /*==================== 各オブジェクトの基本更新 =====================*/

    // パーティクルエディター
    ParticleManager::Update();

}

/////////////////////////////////////////////////////////////////////////////////////////
//
//  描画処理
//
/////////////////////////////////////////////////////////////////////////////////////////

void Scene_Game::Draw() {

    /*======================= 各状態固有の描画 ========================*/

    if (currentState_) {
        currentState_->Draw();
    }

    if (currentEvent_) {
        currentEvent_->Draw();
    }

    /*==================== 各オブジェクトの基本描画 =====================*/

    // グリッドの描画
    SEED::DrawGrid();


    // パーティクルの描画
    ParticleManager::Draw();

    /*======================= 各状態固有の描画 ========================*/

    if(currentState_){
        currentState_->Draw();
    }

    if(currentEvent_){
        currentEvent_->Draw();
    }
}

/////////////////////////////////////////////////////////////////////////////////////////
//
//  フレーム開始時の処理
//
/////////////////////////////////////////////////////////////////////////////////////////
void Scene_Game::BeginFrame() {
    Scene_Base::BeginFrame();
}


/////////////////////////////////////////////////////////////////////////////////////////
//
//  フレーム終了時の処理
//
/////////////////////////////////////////////////////////////////////////////////////////
void Scene_Game::EndFrame() {

    // 現在のステートがあればフレーム終了処理を行う
    if (currentState_) {
        currentState_->EndFrame();
    }
}


/////////////////////////////////////////////////////////////////////////////////////////
//
//  すべてのコライダーをコリジョンマネージャに渡す
//
/////////////////////////////////////////////////////////////////////////////////////////
void Scene_Game::HandOverColliders() {

    if (currentState_) {
        currentState_->HandOverColliders();
    }
}
