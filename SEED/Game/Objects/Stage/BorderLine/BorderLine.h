#pragma once

//============================================================================
//	include
//============================================================================
#include <SEED/Lib/Structs/Sprite.h>

//============================================================================
//	BorderLine class
//============================================================================
class BorderLine {
public:
    //========================================================================
    //	public Methods
    //========================================================================

    BorderLine() = default;
    ~BorderLine() = default;

    // 初期化処理
    void Initialize();

    // 更新処理
    void Update();

    // 描画処理
    void Draw();

    // エディター
    void Edit();

    // json
    void FromJson(const nlohmann::json& data);
    void ToJson(nlohmann::json& data);

    //--------- accessor -----------------------------------------------------

    // アクティブ状態にする
    void SetActivate(const Vector2& translate, float sizeY);
    // 非アクティブ状態にする
    void SetDeactivate();

    // 現在アクティブ状態かどうか(アクティブ == 置かれている状態)
    bool IsActive() const { return currentState_ == State::Active; }
private:
    //========================================================================
    //	private Methods
    //========================================================================

    //--------- structure ----------------------------------------------------

    // 現在の状態
    enum class State {

        Disable, // 非アクティブ状態
        Active,  // アクティブ状態
    };

    //--------- variables ----------------------------------------------------

    // 現在の状態
    State currentState_;

    // 描画情報
    Sprite sprite_;

    //--------- functions ----------------------------------------------------


};