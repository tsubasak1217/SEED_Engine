#include "FieldObject_ViewPoint.h"

// static変数の初期化
uint32_t FieldObject_ViewPoint::nextFieldObjectID_ = 1;

////////////////////////////////////////////////////////////////////////
// コンストラクタ
////////////////////////////////////////////////////////////////////////
FieldObject_ViewPoint::FieldObject_ViewPoint(){
    className_ = "FieldObject_ViewPoint";
    name_ = "viewPoint";
    // モデルの初期化
    std::string path = "FieldObject/" + name_ + ".obj";
    model_ = std::make_unique<Model>("Assets/Cube.obj");
    model_->isRotateWithQuaternion_ = false;
    // コライダー関連の初期化
    colliderEditor_ = std::make_unique<ColliderEditor>(className_, this);
    InitColliders(ObjectType::Field);
    // 全般の初期化
    FieldObject::Initialize();

    fieldObjectID_ = nextFieldObjectID_++;
}

////////////////////////////////////////////////////////////////////////
// 初期化関数
////////////////////////////////////////////////////////////////////////
void FieldObject_ViewPoint::Initialize(){}


////////////////////////////////////////////////////////////////////////
// 更新関数
////////////////////////////////////////////////////////////////////////
void FieldObject_ViewPoint::Update(){
    FieldObject::Update();
}

////////////////////////////////////////////////////////////////////////
// 描画関数
////////////////////////////////////////////////////////////////////////
void FieldObject_ViewPoint::Draw(){
#ifdef _DEBUG
    FieldObject::Draw();
#endif // _DEBUG
}
